version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-stretch-node # このイメージをすべての `steps` が実行されるプライマリコンテナとして使用
        environment: # プライマリコンテナの環境変数
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          PGHOST: db
          PGUSER: myuser
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine # データベースイメージ
        environment: # データベースの環境変数
          POSTGRES_USER: myuser
          POSTGRES_DB: AnayumeAppDB_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      
      # Bundler のバージョンを指定します
      - run:
          name: Bundler を指定
          command: gem install bundler -v 2.1.4               

      # バンドルキャッシュを復元
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run: # Ruby の依存関係をインストール
          name: bundle install
          command: bundle install --path vendor/bundle 

      # Ruby の依存関係のバンドルキャッシュを保存
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: DB を待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: データベースをセットアップ
          command: bin/rails db:schema:load --trace
          
      - run:
          name: rails test
          command: bundle exec rake test

      # テストサマリー (https://circleci.com/docs/ja/2.0/collect-test-data/) に表示するテスト結果をアップロード
      - store_test_results: 
          path: test_results

      # 自動デプロイ
      - add_ssh_keys:
          fingerprints:
            - "9e:e1:bd:69:9e:a3:75:8d:6a:13:f4:2e:f7:38:95:70"

      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy
